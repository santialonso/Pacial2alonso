@page "/ListadoDetalles/{id:int}"
@using BlazorApp1.Data
@using Model.Entidades
@inject DetalleService  ServicioDetalle
@inject NavigationManager navigation
@inject IJSRuntime JsRuntime

<h1>Listado de Detalles</h1>

<button type="button" class="btn btn-primary" @onclick="()=>Editar(0)">Nuevo</button>

@if (Detalle == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>Fecha</th>
                <th>Tiempo</th>
                <th>Tarea</th>
                <th>Acciones</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var f in Detalle)
            {
                <tr>
                    <td>@f.Id</td>
                    <td>@f.Fecha</td>
                    <td>@f.Tiempo</td>
                    <td>@f.Tarea.Titulo</td>
                    <td><button type="button" class="btn btn-success" @onclick="()=>Editar(f.Id)">Editar</button> <button type="button" class="btn btn-danger" @onclick="()=>Borrar(f.Id)">Borrar</button></td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
   

    private List<Detalle> Detalle;
    [Parameter]
    public int Id { get; set; }


    protected override async Task OnInitializedAsync()
    {
        Detalle = await ServicioDetalle.GetAll(Id);
    }

    protected void Editar(int id)
    {
        navigation.NavigateTo("/Editardetalle/"+ id + "/TareaId/" + Id);
    }

    async Task Borrar(int id)
    {
        bool confirmed = await JsRuntime.InvokeAsync<bool>("confirm", "Desea elimiar a este detalle?");
        if (confirmed)
        {
            await ServicioDetalle.Remove(id);
            Detalle = await ServicioDetalle.GetAll(Id);
        }
    }
}